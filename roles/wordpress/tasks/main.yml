---
- name: Download WordPress
  get_url:
    url: https://wordpress.org/latest.tar.gz
    dest: /tmp/wordpress.tar.gz
  register: wordpress_download_result

- name: Show success message after downloading WordPress
  ansible.builtin.debug:
    msg: "WordPress has been downloaded."
  when: wordpress_download_result is changed

- name: Extract WordPress archive
  unarchive:
    src: /tmp/wordpress.tar.gz
    dest: /var/www/html/
    remote_src: yes
  when: wordpress_download_result is changed
  register: wordpress_extraction_result

- name: Show success message after extracting WordPress archive
  ansible.builtin.debug:
    msg: "WordPress archive has been successfully extracted"
  when: wordpress_extraction_result is changed

- name: Set ownership to Apache user
  file:
    path: /var/www/html/wordpress
    owner: apache
    group: apache
    recurse: yes
  register: set_ownership
  when: wordpress_download_result is changed

- name: Show success message after set ownership
  ansible.builtin.debug:
    msg: "ownership has been successfully set"
  when: set_ownership is changed

- name: Create test.php file
  copy:
    content: "<?php phpinfo(); ?>"
    dest: /var/www/html/wordpress/test.php
  when: wordpress_download_result is changed
  register: create_test

- name: Show success message after creating test.php file
  ansible.builtin.debug:
    msg: "test.php file created"
  when: create_test is changed

- name: Remove temporary WordPress archive
  file:
    path: /tmp/wordpress.tar.gz
    state: absent
  when: wordpress_download_result is changed
  register: remove_temp

- name: Show success message after removing temporary WordPress archive
  ansible.builtin.debug:
    msg: "Temporary WordPress archive has been removed"
  when: remove_temp is changed